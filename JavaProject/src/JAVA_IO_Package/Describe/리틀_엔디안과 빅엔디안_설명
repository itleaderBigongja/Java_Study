리틀 엔디안과 빅 엔디안

리틀 엔디안과 빅 엔디안 바이트를 문자로 변환할 때, CharacterSet(UTF-8, UTF-16, UTF-16BE, 과 함께 인코딩과 디코딩 작업의 필요한 요소이다.)

실제 헥사코드로 표현을 해보면 byte -> hax로 변환 하는 작업을 수행 시, 

리틀 에디안의 경우 => [FFFE@@??]로 표현이 되며 ( 리틀 에디안의 경우, input으로 들어온 데이터의 byte 순서가 앞 뒤가 변경이 된다. )
빅 에디안의 경우 => [FEFF??@@]로 표현이 된다. ( 빅 에디안의 경우, input으로 들어온 데이터의 byte 순서대로 나열이 된다. )

System.out.println("가".getBytes("UTF-16BE")); // BE : Big Edian 표현 
System.out.println("가".getBytes("UTF-16LE")); // LE : Little Edian 표현

옛날PC(Linux)의 CPU의 경우는 리틀 에디안 유형의 거꾸로 읽는 처리속도가 빨라서 리틀 에디안 유형으로 데이터를 통신했지만,
요즘PC(Window)의 CPU의 경우는 빅 에디안 유형의 순서대로 읽는 처리속도가 빠르기 때문에 빅 에디안으로 데이터 통신을 한다.

하지만, 요즘은 Linux와 Window도 다 발전을 했기 때문에. 서로 유형을 맞춰 통신을 할수 있다.
리눅스도 빅 에디안이 가능하고, 윈도우 또한 리틀 에디안으로 통신을 할 수 있다.

그런다음 에디안이 없을 경우는 에디터가 들어오는 데이터의 바이트의 패턴을 추측해서 빅 에디안 또는 리틀 에디안으로 묵시적으로 바꿔서 통신을할 수 있다.

자바의 표준은 UTF-16이며 65536의 글자를 표현할수있다.

UTF-16의 확장팩인 UTF-32 == UCS-4







