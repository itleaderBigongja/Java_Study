package thread_3;

/** 데몬스레드와 사용자스레드
 *  스레드는 종료 방식에 따라 사용자스레드(User Thread)와 데몬스레드(Daemon Thread)
 *  
 *  사용자 스레드의 경우, 모두 종료되어야 프로그램이 끝나며 하나라도 실행 중이면 마지막 스레드가 실행을 마칠 때까지 기다린다.
 *  데몬 스레드의 경우, 프로그램 종료 즉, 주 스레드가 종료될 시 데몬 스레드는 강제 종료가 된다.
 *  
 *  사용자 스레드의 설정 : 스레드의 default 설정은 사용자 스레드이며, 설정을 한다면 setDaemon(false)를 하면된다.
 *  데몬 스레드의 설정 : setDaemon(true)로 설정을 하면된다. 
 */
public class DaemonThread {

	public static void main(String[] args) {
		DaemonThread_1 worker = new DaemonThread_1();
		worker.setDaemon(true);
		worker.start();
		
		for(int num = 1; num <= 20; num++) {
			
			try {
				System.out.println(num + "번째 주 스레드 실행");
				Thread.sleep(1000);
				if(num == 20){
					System.out.println("주 스레드가 종료됩니다.");
					System.out.println("데몬 스레드가 강제종료됩니다.");
				}
			} catch (InterruptedException e) {
				;
			}
		}
	}
}

class DaemonThread_1 extends Thread {
	
	@Override
	public void run() {
		int count = 0;
		while(true) {
			count++;
			System.out.println(count + "번째 데몬스레드");
			try {
				Thread.sleep(1000);
			} catch (Exception e) {
				// TODO: handle exception
			}
			
		}
	}
}

class userThread extends Thread {
	
	@Override
	public void run() {
		int count = 0;
		for(int i = 1; i < 25; i++) {
			count++;
			try {
				System.out.println(count + "번째 사용자 스레드 실행");
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				// TODO: handle exception
			}
		}
	}
}